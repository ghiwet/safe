// Copyright 2014 Cubane Canada, Inc.  All rights reserved.
// See LICENSE for details.

/*---
info: >
   Misc sequencing tests
   inspired by https://github.com/promises-aplus/promises-tests/issues/61
   Case "T1"
es6id: S25.4.4_A2.1_T1
author: Sam Mikes
description: Promise onResolved functions are called in predictable sequence
includes: [PromiseHelper.js]
---*/

var resolveP1, rejectP2, sequence = [];

(new Promise(function (resolve, reject) {
    resolveP1 = resolve;
})).then(function (msg) {
    sequence.push(msg);
}).then(function () {
    __result1 = true;
    for (var i = 0; i < sequence.length - 1; i++) {
        if (sequence[i] + 1 !== sequence[i + 1]) {
            __result1 = false;
        }
    }
})

(new Promise(function (resolve, reject) {
    rejectP2 = reject;
})).catch(function (msg) {
    sequence.push(msg);
});

rejectP2(2);
resolveP1(3);

sequence.push(1);

__expect1 = true;
