#!/bin/bash

################################################################################
#    Copyright (c) 2016-2017, KAIST.
#    All rights reserved.
#
#    Use is subject to license terms.
#
#    This distribution may include materials developed by third parties.
################################################################################

function abspath() {
  local path=$1
  local pwd_restore="$(pwd)"

  local dir=$(dirname "$path")
  if [ -d "$dir" ]; then
    cd "$dir"
    path=$(basename "$path")
    # follow chain of symlinks
    while [ -L "$path" ]; do
      path=$(readlink "$path")
      cd $(dirname "$path")
      path=$(basename "$path")
    done
    echo "$(pwd -P)/$path"
    cd "$pwd_restore"
  else
    echo "Trying to resolve non-existent relative path $path, don't want to use PWD."
    exit 1
  fi
}


if [ -z "$SAFE_HOME" ]; then
  self=`abspath $0`
  SAFE_HOME=`dirname $self`/..
  export SAFE_HOME
fi

if (uname | egrep CYGWIN > /dev/null) ; then
  SEP=";"
else
  SEP=":"
fi
TP="${SAFE_HOME}/lib"
TP_MANAGED="$(find ${SAFE_HOME}/lib_managed -name "*.jar" | tr '\n' ${SEP})"
SV="2.12"

CP="${SAFE_HOME}/target/scala-${SV}/classes${SEP}${TP_MANAGED}${SEP}${TP}/xtc.jar${SEP}${TP}/jline-2.12.jar${SEP}${TP}/jericho-html-3.3.jar${SEP}${TP}/commons-io-1.3.2.jar${SEP}$CLASSPATH"

if [ -z "$JAVA_HOME" ] ; then
  JAVACMD=java
else
  JAVACMD="$JAVA_HOME/bin/java"
fi

if [ -z "$JAVA_FLAGS" ] ; then
  JAVA_FLAGS="-Xmx30g -Xss32m -Dfile.encoding=utf8"
fi

# remote debugging
if [ "$1" == "-debug" ] ; then
    JAVA_FLAGS="-Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 $JAVA_FLAGS"
    shift
fi

"$JAVACMD" $JAVA_OPTS $JAVA_FLAGS -cp "$CP" kr.ac.kaist.safe.Safe "$@"
EXIT_CODE=$?
wait $!
if [ $EXIT_CODE -ne 0 ] ; then
  exit $EXIT_CODE
fi
